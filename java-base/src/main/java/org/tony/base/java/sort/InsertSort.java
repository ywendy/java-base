package org.tony.base.java.sort;

public class InsertSort extends SortTemplate {

	@Override
	public void sort(int[] array) {
		
		/***
		 * 
		 * 给出数组:18, 44, 56, 2, 89, 0, 1, 32
		 * 
		 * i = 1, 判断array[0]<array[1]，不做任何处理: 18, 44, 56, 2, 89, 0, 1, 32
		 * 
		 * i=2 ,判断array[1]<array[2]，不做任何处理: 18, 44, 56, 2, 89, 0, 1, 32
		 * 
		 * i=3, 判断array[2]>array[3] 处理如下：
		 * 
		 * 				1、记录此时array[3] 位置的数据到临时数据里tmp = array[3] = 2
		 * 				2、记录此时需要进行比较的数据的最大索引值 ，即 j = i = 3
		 * 				3、内层循环判断 j=3>0, array[3-1] = 56 > tmp=2 则进入循环.
		 * 				4、移动 array[3] = 2 重新赋值为：array[2] = 56 ,则数组结构变化为: 18, 44, 56,56, 89, 0, 1, 32
		 * 				重复上面动作:j=2	 ,										 18,44,44,56,89,0,1,32
		 * 						 j=1,									     18,18,44,56,89,0,1,32
		 * 						j=0, 不做处理，循环完毕.
		 * 				5、把j=0 位置的数据变成刚才的临时数据，也就是tmp.                   2,18,44,56,89,0,1,32
		 * i = 4 ,判断 array[4]>array[3] 不做处理. 2,18,44,56,89,0,1,32
		 * 
		 * i = 5,判断 array[5]<array[4] 处理过程同 i=3 :          2,18,44,56,89,0,1,32
		 * 											 j=5:   2,18,44,56,89,89,1,32
		 * 			                                 j=4:   2,18,44,56,56,89,1,32
		 * 										     j=3:   2,18,44,44,56,89,1,32
		 * 										     j=2:   2,18,18,44,56,89,1,32
		 * 										     j=1:   2, 2,18,44,56,89,1,32
		 * 							赋值临时tmp到最后的j=0:  0, 2,18,44,56,89,1,32
		 * 
		 * i=6,处理同i=5:    0,1, 2,18,44,56,89,32
		 * 
		 * i=7 判断 array[7]<array[6] 处理： 0,1, 2,18,44,56,89,32 临时tmp=32
		 * 
		 * 
		 * 						j=7    0,1,2,18,44,56,89,89
		 * 						
		 * 						j=6    0,1,2,18,44,56,56,89
		 * 						j=5    0,1,2,18,44,44,56,89
		 * 						j=4    0,1,2,18,44,44,56,89
		 *                      j=4       把临时存储的值32 插入到j=4 的位置. 0,1,2,18,32,44,56,89
		 * 
		 * 
		 * 
		 * 
		 * 
		 */
		System.out.println("------------insert sort begin!-------------");

		for (int i = 1; i < array.length; i++) {// 排序元素第一个表示为有序的，所以从第2个元素开始处理，即i=1

			if (array[i - 1] > array[i]) {// 如果前面的的比当前值大才开始处理，否则不予比较处理，因为当前值前面的值是有序的，要是最后一个比当前值都小，就没必要向前比较了.

				int tmp = array[i];//记录当前值到中间变量里.
				int j = i;//让 j=i 表示后面循环从j也就是i向前开始比较处理
				while(j>0&&array[j-1]>tmp){//循环进入条件，j>0,并且当前值得前一个要比当前值大
					array[j] = array[j-1];//把j-1的值向后移动
					j--;
				}
				//如果比较移动完成后，需要把当前值放到j这个位置.
				array[j] = tmp;
			}

		}

		/*
		 * +
		 */
		display(array);
		System.out.println("------------insert sort end!-------------");

	}

	public static void main(String[] args) {

		SortTemplate sort = new InsertSort();
		int[] array = { 18, 44, 56, 2, 89, 0, 1, 32 };
		System.out.println("--------排序前--------");
		sort.display(array);

		sort.sort(array);

	}

}
